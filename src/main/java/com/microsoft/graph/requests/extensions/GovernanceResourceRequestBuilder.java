// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.GovernanceResource;
import com.microsoft.graph.requests.extensions.GovernanceRoleAssignmentRequestCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleAssignmentRequestRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleDefinitionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleDefinitionRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleSettingCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceRoleSettingRequestBuilder;
import com.microsoft.graph.requests.extensions.GovernanceResourceRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Governance Resource Request Builder.
 */
public class GovernanceResourceRequestBuilder extends BaseRequestBuilder<GovernanceResource> {

    /**
     * The request builder for the GovernanceResource
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public GovernanceResourceRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the GovernanceResourceRequest instance
     */
    @Nonnull
    public GovernanceResourceRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the GovernanceResourceRequest instance
     */
    @Nonnull
    public GovernanceResourceRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.GovernanceResourceRequest(getRequestUrl(), getClient(), requestOptions);
    }



    /**
     * Gets the request builder for GovernanceResource
     *
     * @return the GovernanceResourceRequestBuilder instance
     */
    @Nonnull
    public GovernanceResourceRequestBuilder parent() {
        return new GovernanceResourceRequestBuilder(getRequestUrlWithAdditionalSegment("parent"), getClient(), null);
    }
    /**
     *  Gets a request builder for the GovernanceRoleAssignmentRequest collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public GovernanceRoleAssignmentRequestCollectionRequestBuilder roleAssignmentRequests() {
        return new GovernanceRoleAssignmentRequestCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("roleAssignmentRequests"), getClient(), null);
    }

    /**
     * Gets a request builder for the GovernanceRoleAssignmentRequest item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public GovernanceRoleAssignmentRequestRequestBuilder roleAssignmentRequests(@Nonnull final String id) {
        return new GovernanceRoleAssignmentRequestRequestBuilder(getRequestUrlWithAdditionalSegment("roleAssignmentRequests") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the GovernanceRoleAssignment collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public GovernanceRoleAssignmentCollectionRequestBuilder roleAssignments() {
        return new GovernanceRoleAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("roleAssignments"), getClient(), null);
    }

    /**
     * Gets a request builder for the GovernanceRoleAssignment item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public GovernanceRoleAssignmentRequestBuilder roleAssignments(@Nonnull final String id) {
        return new GovernanceRoleAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("roleAssignments") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the GovernanceRoleDefinition collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public GovernanceRoleDefinitionCollectionRequestBuilder roleDefinitions() {
        return new GovernanceRoleDefinitionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("roleDefinitions"), getClient(), null);
    }

    /**
     * Gets a request builder for the GovernanceRoleDefinition item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public GovernanceRoleDefinitionRequestBuilder roleDefinitions(@Nonnull final String id) {
        return new GovernanceRoleDefinitionRequestBuilder(getRequestUrlWithAdditionalSegment("roleDefinitions") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the GovernanceRoleSetting collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public GovernanceRoleSettingCollectionRequestBuilder roleSettings() {
        return new GovernanceRoleSettingCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("roleSettings"), getClient(), null);
    }

    /**
     * Gets a request builder for the GovernanceRoleSetting item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public GovernanceRoleSettingRequestBuilder roleSettings(@Nonnull final String id) {
        return new GovernanceRoleSettingRequestBuilder(getRequestUrlWithAdditionalSegment("roleSettings") + "/" + id, getClient(), null);
    }
}
