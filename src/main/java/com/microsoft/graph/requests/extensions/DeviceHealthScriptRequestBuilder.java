// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.DeviceHealthScript;
import com.microsoft.graph.models.extensions.DeviceHealthScriptAssignment;
import com.microsoft.graph.models.extensions.DeviceHealthScriptRemediationHistory;
import com.microsoft.graph.models.generated.GlobalDeviceHealthScriptState;
import com.microsoft.graph.models.extensions.DeviceHealthScriptRemediationSummary;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptDeviceStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptDeviceStateRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceHealthScriptRunSummaryRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.models.extensions.DeviceHealthScriptAssignParameterSet;
import com.microsoft.graph.models.extensions.DeviceHealthScriptUpdateGlobalScriptParameterSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Health Script Request Builder.
 */
public class DeviceHealthScriptRequestBuilder extends BaseRequestBuilder<DeviceHealthScript> {

    /**
     * The request builder for the DeviceHealthScript
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DeviceHealthScriptRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the DeviceHealthScriptRequest instance
     */
    @Nonnull
    public DeviceHealthScriptRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the DeviceHealthScriptRequest instance
     */
    @Nonnull
    public DeviceHealthScriptRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.DeviceHealthScriptRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the DeviceHealthScriptAssignment collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceHealthScriptAssignmentCollectionRequestBuilder assignments() {
        return new DeviceHealthScriptAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("assignments"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceHealthScriptAssignment item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceHealthScriptAssignmentRequestBuilder assignments(@Nonnull final String id) {
        return new DeviceHealthScriptAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("assignments") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceHealthScriptDeviceState collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceHealthScriptDeviceStateCollectionRequestBuilder deviceRunStates() {
        return new DeviceHealthScriptDeviceStateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("deviceRunStates"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceHealthScriptDeviceState item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceHealthScriptDeviceStateRequestBuilder deviceRunStates(@Nonnull final String id) {
        return new DeviceHealthScriptDeviceStateRequestBuilder(getRequestUrlWithAdditionalSegment("deviceRunStates") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for DeviceHealthScriptRunSummary
     *
     * @return the DeviceHealthScriptRunSummaryRequestBuilder instance
     */
    @Nonnull
    public DeviceHealthScriptRunSummaryRequestBuilder runSummary() {
        return new DeviceHealthScriptRunSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("runSummary"), getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceHealthScriptAssignRequestBuilder assign(@Nonnull final DeviceHealthScriptAssignParameterSet parameters) {
        return new DeviceHealthScriptAssignRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.assign"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     */
    @Nonnull
    public DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequestBuilder getGlobalScriptHighestAvailableVersion() {
        return new DeviceHealthScriptGetGlobalScriptHighestAvailableVersionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getGlobalScriptHighestAvailableVersion"), getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceHealthScriptUpdateGlobalScriptRequestBuilder updateGlobalScript(@Nonnull final DeviceHealthScriptUpdateGlobalScriptParameterSet parameters) {
        return new DeviceHealthScriptUpdateGlobalScriptRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.updateGlobalScript"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     */
    @Nonnull
    public DeviceHealthScriptGetRemediationHistoryRequestBuilder getRemediationHistory() {
        return new DeviceHealthScriptGetRemediationHistoryRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getRemediationHistory"), getClient(), null);
    }
}
