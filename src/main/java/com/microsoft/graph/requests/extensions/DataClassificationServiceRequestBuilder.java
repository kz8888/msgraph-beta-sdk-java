// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.DataClassificationService;
import com.microsoft.graph.models.extensions.ContentClassification;
import com.microsoft.graph.models.extensions.ExactMatchClassificationResult;
import com.microsoft.graph.requests.extensions.ExactMatchDataStoreCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ExactMatchDataStoreRequestBuilder;
import com.microsoft.graph.requests.extensions.FileClassificationRequestCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.FileClassificationRequestRequestBuilder;
import com.microsoft.graph.requests.extensions.JobResponseBaseCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.JobResponseBaseRequestBuilder;
import com.microsoft.graph.requests.extensions.TextClassificationRequestCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.TextClassificationRequestRequestBuilder;
import com.microsoft.graph.requests.extensions.SensitiveTypeCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.SensitiveTypeRequestBuilder;
import com.microsoft.graph.requests.extensions.SensitivityLabelCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.SensitivityLabelRequestBuilder;
import com.microsoft.graph.requests.extensions.ExactMatchUploadAgentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ExactMatchUploadAgentRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.models.extensions.DataClassificationServiceClassifyExactMatchesParameterSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Data Classification Service Request Builder.
 */
public class DataClassificationServiceRequestBuilder extends BaseRequestBuilder<DataClassificationService> {

    /**
     * The request builder for the DataClassificationService
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DataClassificationServiceRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the DataClassificationServiceRequest instance
     */
    @Nonnull
    public DataClassificationServiceRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the DataClassificationServiceRequest instance
     */
    @Nonnull
    public DataClassificationServiceRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.DataClassificationServiceRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the ExactMatchDataStore collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ExactMatchDataStoreCollectionRequestBuilder exactMatchDataStores() {
        return new ExactMatchDataStoreCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("exactMatchDataStores"), getClient(), null);
    }

    /**
     * Gets a request builder for the ExactMatchDataStore item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ExactMatchDataStoreRequestBuilder exactMatchDataStores(@Nonnull final String id) {
        return new ExactMatchDataStoreRequestBuilder(getRequestUrlWithAdditionalSegment("exactMatchDataStores") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the FileClassificationRequest collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public FileClassificationRequestCollectionRequestBuilder classifyFile() {
        return new FileClassificationRequestCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("classifyFile"), getClient(), null);
    }

    /**
     * Gets a request builder for the FileClassificationRequest item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public FileClassificationRequestRequestBuilder classifyFile(@Nonnull final String id) {
        return new FileClassificationRequestRequestBuilder(getRequestUrlWithAdditionalSegment("classifyFile") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the JobResponseBase collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public JobResponseBaseCollectionRequestBuilder classifyFileJobs() {
        return new JobResponseBaseCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("classifyFileJobs"), getClient(), null);
    }

    /**
     * Gets a request builder for the JobResponseBase item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public JobResponseBaseRequestBuilder classifyFileJobs(@Nonnull final String id) {
        return new JobResponseBaseRequestBuilder(getRequestUrlWithAdditionalSegment("classifyFileJobs") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the TextClassificationRequest collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public TextClassificationRequestCollectionRequestBuilder classifyText() {
        return new TextClassificationRequestCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("classifyText"), getClient(), null);
    }

    /**
     * Gets a request builder for the TextClassificationRequest item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public TextClassificationRequestRequestBuilder classifyText(@Nonnull final String id) {
        return new TextClassificationRequestRequestBuilder(getRequestUrlWithAdditionalSegment("classifyText") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the JobResponseBase collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public JobResponseBaseCollectionRequestBuilder classifyTextJobs() {
        return new JobResponseBaseCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("classifyTextJobs"), getClient(), null);
    }

    /**
     * Gets a request builder for the JobResponseBase item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public JobResponseBaseRequestBuilder classifyTextJobs(@Nonnull final String id) {
        return new JobResponseBaseRequestBuilder(getRequestUrlWithAdditionalSegment("classifyTextJobs") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the JobResponseBase collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public JobResponseBaseCollectionRequestBuilder evaluateDlpPoliciesJobs() {
        return new JobResponseBaseCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("evaluateDlpPoliciesJobs"), getClient(), null);
    }

    /**
     * Gets a request builder for the JobResponseBase item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public JobResponseBaseRequestBuilder evaluateDlpPoliciesJobs(@Nonnull final String id) {
        return new JobResponseBaseRequestBuilder(getRequestUrlWithAdditionalSegment("evaluateDlpPoliciesJobs") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the JobResponseBase collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public JobResponseBaseCollectionRequestBuilder evaluateLabelJobs() {
        return new JobResponseBaseCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("evaluateLabelJobs"), getClient(), null);
    }

    /**
     * Gets a request builder for the JobResponseBase item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public JobResponseBaseRequestBuilder evaluateLabelJobs(@Nonnull final String id) {
        return new JobResponseBaseRequestBuilder(getRequestUrlWithAdditionalSegment("evaluateLabelJobs") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the JobResponseBase collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public JobResponseBaseCollectionRequestBuilder jobs() {
        return new JobResponseBaseCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("jobs"), getClient(), null);
    }

    /**
     * Gets a request builder for the JobResponseBase item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public JobResponseBaseRequestBuilder jobs(@Nonnull final String id) {
        return new JobResponseBaseRequestBuilder(getRequestUrlWithAdditionalSegment("jobs") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the JobResponseBase collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public JobResponseBaseCollectionRequestBuilder labelsAndPoliciesEvaluationJobs() {
        return new JobResponseBaseCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("labelsAndPoliciesEvaluationJobs"), getClient(), null);
    }

    /**
     * Gets a request builder for the JobResponseBase item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public JobResponseBaseRequestBuilder labelsAndPoliciesEvaluationJobs(@Nonnull final String id) {
        return new JobResponseBaseRequestBuilder(getRequestUrlWithAdditionalSegment("labelsAndPoliciesEvaluationJobs") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the SensitiveType collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public SensitiveTypeCollectionRequestBuilder sensitiveTypes() {
        return new SensitiveTypeCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("sensitiveTypes"), getClient(), null);
    }

    /**
     * Gets a request builder for the SensitiveType item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public SensitiveTypeRequestBuilder sensitiveTypes(@Nonnull final String id) {
        return new SensitiveTypeRequestBuilder(getRequestUrlWithAdditionalSegment("sensitiveTypes") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the SensitivityLabel collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public SensitivityLabelCollectionRequestBuilder sensitivityLabels() {
        return new SensitivityLabelCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("sensitivityLabels"), getClient(), null);
    }

    /**
     * Gets a request builder for the SensitivityLabel item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public SensitivityLabelRequestBuilder sensitivityLabels(@Nonnull final String id) {
        return new SensitivityLabelRequestBuilder(getRequestUrlWithAdditionalSegment("sensitivityLabels") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the ExactMatchUploadAgent collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ExactMatchUploadAgentCollectionRequestBuilder exactMatchUploadAgents() {
        return new ExactMatchUploadAgentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("exactMatchUploadAgents"), getClient(), null);
    }

    /**
     * Gets a request builder for the ExactMatchUploadAgent item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ExactMatchUploadAgentRequestBuilder exactMatchUploadAgents(@Nonnull final String id) {
        return new ExactMatchUploadAgentRequestBuilder(getRequestUrlWithAdditionalSegment("exactMatchUploadAgents") + "/" + id, getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DataClassificationServiceClassifyExactMatchesRequestBuilder classifyExactMatches(@Nonnull final DataClassificationServiceClassifyExactMatchesParameterSet parameters) {
        return new DataClassificationServiceClassifyExactMatchesRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.classifyExactMatches"), getClient(), null, parameters);
    }
}
