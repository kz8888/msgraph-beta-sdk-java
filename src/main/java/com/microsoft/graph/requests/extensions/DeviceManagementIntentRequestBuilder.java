// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.DeviceManagementIntent;
import com.microsoft.graph.models.extensions.DeviceManagementIntentAssignment;
import com.microsoft.graph.models.extensions.DeviceManagementSettingInstance;
import com.microsoft.graph.models.extensions.DeviceManagementSettingComparison;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentAssignmentCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentAssignmentRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentSettingCategoryCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentSettingCategoryRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentDeviceSettingStateSummaryCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentDeviceSettingStateSummaryRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentDeviceStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentDeviceStateRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementSettingInstanceCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementSettingInstanceRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentUserStateCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentUserStateRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentDeviceStateSummaryRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementIntentUserStateSummaryRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.models.extensions.DeviceManagementIntentAssignParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementIntentCreateCopyParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementIntentMigrateToTemplateParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementIntentUpdateSettingsParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementIntentCompareParameterSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Management Intent Request Builder.
 */
public class DeviceManagementIntentRequestBuilder extends BaseRequestBuilder<DeviceManagementIntent> {

    /**
     * The request builder for the DeviceManagementIntent
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DeviceManagementIntentRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the DeviceManagementIntentRequest instance
     */
    @Nonnull
    public DeviceManagementIntentRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the DeviceManagementIntentRequest instance
     */
    @Nonnull
    public DeviceManagementIntentRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.DeviceManagementIntentRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the DeviceManagementIntentAssignment collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementIntentAssignmentCollectionRequestBuilder assignments() {
        return new DeviceManagementIntentAssignmentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("assignments"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementIntentAssignment item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementIntentAssignmentRequestBuilder assignments(@Nonnull final String id) {
        return new DeviceManagementIntentAssignmentRequestBuilder(getRequestUrlWithAdditionalSegment("assignments") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceManagementIntentSettingCategory collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementIntentSettingCategoryCollectionRequestBuilder categories() {
        return new DeviceManagementIntentSettingCategoryCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("categories"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementIntentSettingCategory item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementIntentSettingCategoryRequestBuilder categories(@Nonnull final String id) {
        return new DeviceManagementIntentSettingCategoryRequestBuilder(getRequestUrlWithAdditionalSegment("categories") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceManagementIntentDeviceSettingStateSummary collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementIntentDeviceSettingStateSummaryCollectionRequestBuilder deviceSettingStateSummaries() {
        return new DeviceManagementIntentDeviceSettingStateSummaryCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("deviceSettingStateSummaries"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementIntentDeviceSettingStateSummary item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementIntentDeviceSettingStateSummaryRequestBuilder deviceSettingStateSummaries(@Nonnull final String id) {
        return new DeviceManagementIntentDeviceSettingStateSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("deviceSettingStateSummaries") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceManagementIntentDeviceState collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementIntentDeviceStateCollectionRequestBuilder deviceStates() {
        return new DeviceManagementIntentDeviceStateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("deviceStates"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementIntentDeviceState item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementIntentDeviceStateRequestBuilder deviceStates(@Nonnull final String id) {
        return new DeviceManagementIntentDeviceStateRequestBuilder(getRequestUrlWithAdditionalSegment("deviceStates") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for DeviceManagementIntentDeviceStateSummary
     *
     * @return the DeviceManagementIntentDeviceStateSummaryRequestBuilder instance
     */
    @Nonnull
    public DeviceManagementIntentDeviceStateSummaryRequestBuilder deviceStateSummary() {
        return new DeviceManagementIntentDeviceStateSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("deviceStateSummary"), getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceManagementSettingInstance collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementSettingInstanceCollectionRequestBuilder settings() {
        return new DeviceManagementSettingInstanceCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("settings"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementSettingInstance item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementSettingInstanceRequestBuilder settings(@Nonnull final String id) {
        return new DeviceManagementSettingInstanceRequestBuilder(getRequestUrlWithAdditionalSegment("settings") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceManagementIntentUserState collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementIntentUserStateCollectionRequestBuilder userStates() {
        return new DeviceManagementIntentUserStateCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("userStates"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementIntentUserState item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementIntentUserStateRequestBuilder userStates(@Nonnull final String id) {
        return new DeviceManagementIntentUserStateRequestBuilder(getRequestUrlWithAdditionalSegment("userStates") + "/" + id, getClient(), null);
    }

    /**
     * Gets the request builder for DeviceManagementIntentUserStateSummary
     *
     * @return the DeviceManagementIntentUserStateSummaryRequestBuilder instance
     */
    @Nonnull
    public DeviceManagementIntentUserStateSummaryRequestBuilder userStateSummary() {
        return new DeviceManagementIntentUserStateSummaryRequestBuilder(getRequestUrlWithAdditionalSegment("userStateSummary"), getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementIntentAssignRequestBuilder assign(@Nonnull final DeviceManagementIntentAssignParameterSet parameters) {
        return new DeviceManagementIntentAssignRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.assign"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementIntentCreateCopyRequestBuilder createCopy(@Nonnull final DeviceManagementIntentCreateCopyParameterSet parameters) {
        return new DeviceManagementIntentCreateCopyRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.createCopy"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementIntentMigrateToTemplateRequestBuilder migrateToTemplate(@Nonnull final DeviceManagementIntentMigrateToTemplateParameterSet parameters) {
        return new DeviceManagementIntentMigrateToTemplateRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.migrateToTemplate"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementIntentUpdateSettingsRequestBuilder updateSettings(@Nonnull final DeviceManagementIntentUpdateSettingsParameterSet parameters) {
        return new DeviceManagementIntentUpdateSettingsRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.updateSettings"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder collection
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementIntentCompareCollectionRequestBuilder compare(@Nonnull final DeviceManagementIntentCompareParameterSet parameters) {
        return new DeviceManagementIntentCompareCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.compare"), getClient(), null, parameters);
    }
}
