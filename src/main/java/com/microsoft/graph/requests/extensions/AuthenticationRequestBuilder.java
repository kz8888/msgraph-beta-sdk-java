// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.Authentication;
import com.microsoft.graph.requests.extensions.EmailAuthenticationMethodCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.EmailAuthenticationMethodRequestBuilder;
import com.microsoft.graph.requests.extensions.Fido2AuthenticationMethodCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.Fido2AuthenticationMethodRequestBuilder;
import com.microsoft.graph.requests.extensions.AuthenticationMethodCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.AuthenticationMethodRequestBuilder;
import com.microsoft.graph.requests.extensions.LongRunningOperationCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.LongRunningOperationRequestBuilder;
import com.microsoft.graph.requests.extensions.PasswordlessMicrosoftAuthenticatorAuthenticationMethodCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.PasswordlessMicrosoftAuthenticatorAuthenticationMethodRequestBuilder;
import com.microsoft.graph.requests.extensions.PasswordAuthenticationMethodCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.PasswordAuthenticationMethodRequestBuilder;
import com.microsoft.graph.requests.extensions.PhoneAuthenticationMethodCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.PhoneAuthenticationMethodRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Authentication Request Builder.
 */
public class AuthenticationRequestBuilder extends BaseRequestBuilder<Authentication> {

    /**
     * The request builder for the Authentication
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public AuthenticationRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the AuthenticationRequest instance
     */
    @Nonnull
    public AuthenticationRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the AuthenticationRequest instance
     */
    @Nonnull
    public AuthenticationRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.AuthenticationRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the EmailAuthenticationMethod collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public EmailAuthenticationMethodCollectionRequestBuilder emailMethods() {
        return new EmailAuthenticationMethodCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("emailMethods"), getClient(), null);
    }

    /**
     * Gets a request builder for the EmailAuthenticationMethod item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public EmailAuthenticationMethodRequestBuilder emailMethods(@Nonnull final String id) {
        return new EmailAuthenticationMethodRequestBuilder(getRequestUrlWithAdditionalSegment("emailMethods") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the Fido2AuthenticationMethod collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public Fido2AuthenticationMethodCollectionRequestBuilder fido2Methods() {
        return new Fido2AuthenticationMethodCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("fido2Methods"), getClient(), null);
    }

    /**
     * Gets a request builder for the Fido2AuthenticationMethod item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public Fido2AuthenticationMethodRequestBuilder fido2Methods(@Nonnull final String id) {
        return new Fido2AuthenticationMethodRequestBuilder(getRequestUrlWithAdditionalSegment("fido2Methods") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the AuthenticationMethod collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public AuthenticationMethodCollectionRequestBuilder methods() {
        return new AuthenticationMethodCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("methods"), getClient(), null);
    }

    /**
     * Gets a request builder for the AuthenticationMethod item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public AuthenticationMethodRequestBuilder methods(@Nonnull final String id) {
        return new AuthenticationMethodRequestBuilder(getRequestUrlWithAdditionalSegment("methods") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the LongRunningOperation collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public LongRunningOperationCollectionRequestBuilder operations() {
        return new LongRunningOperationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("operations"), getClient(), null);
    }

    /**
     * Gets a request builder for the LongRunningOperation item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public LongRunningOperationRequestBuilder operations(@Nonnull final String id) {
        return new LongRunningOperationRequestBuilder(getRequestUrlWithAdditionalSegment("operations") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PasswordlessMicrosoftAuthenticatorAuthenticationMethod collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PasswordlessMicrosoftAuthenticatorAuthenticationMethodCollectionRequestBuilder passwordlessMicrosoftAuthenticatorMethods() {
        return new PasswordlessMicrosoftAuthenticatorAuthenticationMethodCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("passwordlessMicrosoftAuthenticatorMethods"), getClient(), null);
    }

    /**
     * Gets a request builder for the PasswordlessMicrosoftAuthenticatorAuthenticationMethod item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PasswordlessMicrosoftAuthenticatorAuthenticationMethodRequestBuilder passwordlessMicrosoftAuthenticatorMethods(@Nonnull final String id) {
        return new PasswordlessMicrosoftAuthenticatorAuthenticationMethodRequestBuilder(getRequestUrlWithAdditionalSegment("passwordlessMicrosoftAuthenticatorMethods") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PasswordAuthenticationMethod collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PasswordAuthenticationMethodCollectionRequestBuilder passwordMethods() {
        return new PasswordAuthenticationMethodCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("passwordMethods"), getClient(), null);
    }

    /**
     * Gets a request builder for the PasswordAuthenticationMethod item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PasswordAuthenticationMethodRequestBuilder passwordMethods(@Nonnull final String id) {
        return new PasswordAuthenticationMethodRequestBuilder(getRequestUrlWithAdditionalSegment("passwordMethods") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PhoneAuthenticationMethod collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PhoneAuthenticationMethodCollectionRequestBuilder phoneMethods() {
        return new PhoneAuthenticationMethodCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("phoneMethods"), getClient(), null);
    }

    /**
     * Gets a request builder for the PhoneAuthenticationMethod item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PhoneAuthenticationMethodRequestBuilder phoneMethods(@Nonnull final String id) {
        return new PhoneAuthenticationMethodRequestBuilder(getRequestUrlWithAdditionalSegment("phoneMethods") + "/" + id, getClient(), null);
    }
}
