// Template Source: BaseEntityRequest.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.ProviderTenantSetting;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequest;
import com.microsoft.graph.http.HttpMethod;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Provider Tenant Setting Request.
 */
public class ProviderTenantSettingRequest extends BaseRequest<ProviderTenantSetting> {
	
    /**
     * The request for the ProviderTenantSetting
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public ProviderTenantSettingRequest(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, ProviderTenantSetting.class);
    }

    /**
     * Gets the ProviderTenantSetting from the service
     *
     * @param callback the callback to be called after success or failure
     */
    public void get(@Nonnull final ICallback<? super ProviderTenantSetting> callback) {
        send(HttpMethod.GET, callback, null);
    }

    /**
     * Gets the ProviderTenantSetting from the service
     *
     * @return the ProviderTenantSetting from the request
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public ProviderTenantSetting get() throws ClientException {
       return send(HttpMethod.GET, null);
    }

    /**
     * Delete this item from the service
     *
     * @param callback the callback when the deletion action has completed
     */
    public void delete(@Nonnull final ICallback<? super ProviderTenantSetting> callback) {
        send(HttpMethod.DELETE, callback, null);
    }

    /**
     * Delete this item from the service
     *
     * @throws ClientException if there was an exception during the delete operation
     */
    public void delete() throws ClientException {
        send(HttpMethod.DELETE, null);
    }

    /**
     * Patches this ProviderTenantSetting with a source
     *
     * @param sourceProviderTenantSetting the source object with updates
     * @param callback the callback to be called after success or failure
     */
    public void patch(@Nonnull final ProviderTenantSetting sourceProviderTenantSetting, @Nonnull final ICallback<? super ProviderTenantSetting> callback) {
        send(HttpMethod.PATCH, callback, sourceProviderTenantSetting);
    }

    /**
     * Patches this ProviderTenantSetting with a source
     *
     * @param sourceProviderTenantSetting the source object with updates
     * @return the updated ProviderTenantSetting
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public ProviderTenantSetting patch(@Nonnull final ProviderTenantSetting sourceProviderTenantSetting) throws ClientException {
        return send(HttpMethod.PATCH, sourceProviderTenantSetting);
    }

    /**
     * Creates a ProviderTenantSetting with a new object
     *
     * @param newProviderTenantSetting the new object to create
     * @param callback the callback to be called after success or failure
     */
    public void post(@Nonnull final ProviderTenantSetting newProviderTenantSetting, @Nonnull final ICallback<? super ProviderTenantSetting> callback) {
        send(HttpMethod.POST, callback, newProviderTenantSetting);
    }

    /**
     * Creates a ProviderTenantSetting with a new object
     *
     * @param newProviderTenantSetting the new object to create
     * @return the created ProviderTenantSetting
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public ProviderTenantSetting post(@Nonnull final ProviderTenantSetting newProviderTenantSetting) throws ClientException {
        return send(HttpMethod.POST, newProviderTenantSetting);
    }

    /**
     * Creates a ProviderTenantSetting with a new object
     *
     * @param newProviderTenantSetting the object to create/update
     * @param callback the callback to be called after success or failure
     */
    public void put(@Nonnull final ProviderTenantSetting newProviderTenantSetting, @Nonnull final ICallback<? super ProviderTenantSetting> callback) {
        send(HttpMethod.PUT, callback, newProviderTenantSetting);
    }

    /**
     * Creates a ProviderTenantSetting with a new object
     *
     * @param newProviderTenantSetting the object to create/update
     * @return the created ProviderTenantSetting
     * @throws ClientException this exception occurs if the request was unable to complete for any reason
     */
    @Nullable
    public ProviderTenantSetting put(@Nonnull final ProviderTenantSetting newProviderTenantSetting) throws ClientException {
        return send(HttpMethod.PUT, newProviderTenantSetting);
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
     @Nonnull
     public ProviderTenantSettingRequest select(@Nonnull final String value) {
         addSelectOption(value);
         return this;
     }

    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
     @Nonnull
     public ProviderTenantSettingRequest expand(@Nonnull final String value) {
         addExpandOption(value);
         return this;
     }

}

