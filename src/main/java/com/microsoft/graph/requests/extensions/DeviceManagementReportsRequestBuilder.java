// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.DeviceManagementReports;
import com.microsoft.graph.requests.extensions.DeviceManagementCachedReportConfigurationCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementCachedReportConfigurationRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementExportJobCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementExportJobRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementReportScheduleCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.DeviceManagementReportScheduleRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetAppsInstallSummaryReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetAppStatusOverviewReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetDeviceInstallStatusReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetUserInstallStatusReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetConfigurationPoliciesReportForDeviceParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetConfigurationPolicyDevicesReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetConfigurationSettingDetailsReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetConfigurationSettingsReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetActiveMalwareReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetActiveMalwareSummaryReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetMalwareSummaryReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetUnhealthyDefenderAgentsReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetUnhealthyFirewallReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetUnhealthyFirewallSummaryReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetCertificatesReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetCachedReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetDeviceNonComplianceReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetHistoricalReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetPolicyNonComplianceMetadataParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetPolicyNonComplianceReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetPolicyNonComplianceSummaryReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetReportFiltersParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetSettingNonComplianceReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportParameterSet;
import com.microsoft.graph.models.extensions.DeviceManagementReportsGetWindowsUpdateAlertSummaryReportParameterSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Management Reports Request Builder.
 */
public class DeviceManagementReportsRequestBuilder extends BaseRequestBuilder<DeviceManagementReports> {

    /**
     * The request builder for the DeviceManagementReports
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DeviceManagementReportsRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the DeviceManagementReportsRequest instance
     */
    @Nonnull
    public DeviceManagementReportsRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the DeviceManagementReportsRequest instance
     */
    @Nonnull
    public DeviceManagementReportsRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.DeviceManagementReportsRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the DeviceManagementCachedReportConfiguration collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementCachedReportConfigurationCollectionRequestBuilder cachedReportConfigurations() {
        return new DeviceManagementCachedReportConfigurationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("cachedReportConfigurations"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementCachedReportConfiguration item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementCachedReportConfigurationRequestBuilder cachedReportConfigurations(@Nonnull final String id) {
        return new DeviceManagementCachedReportConfigurationRequestBuilder(getRequestUrlWithAdditionalSegment("cachedReportConfigurations") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceManagementExportJob collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementExportJobCollectionRequestBuilder exportJobs() {
        return new DeviceManagementExportJobCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("exportJobs"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementExportJob item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementExportJobRequestBuilder exportJobs(@Nonnull final String id) {
        return new DeviceManagementExportJobRequestBuilder(getRequestUrlWithAdditionalSegment("exportJobs") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the DeviceManagementReportSchedule collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public DeviceManagementReportScheduleCollectionRequestBuilder reportSchedules() {
        return new DeviceManagementReportScheduleCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("reportSchedules"), getClient(), null);
    }

    /**
     * Gets a request builder for the DeviceManagementReportSchedule item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public DeviceManagementReportScheduleRequestBuilder reportSchedules(@Nonnull final String id) {
        return new DeviceManagementReportScheduleRequestBuilder(getRequestUrlWithAdditionalSegment("reportSchedules") + "/" + id, getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetAppsInstallSummaryReportRequestBuilder getAppsInstallSummaryReport(@Nonnull final DeviceManagementReportsGetAppsInstallSummaryReportParameterSet parameters) {
        return new DeviceManagementReportsGetAppsInstallSummaryReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getAppsInstallSummaryReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetAppStatusOverviewReportRequestBuilder getAppStatusOverviewReport(@Nonnull final DeviceManagementReportsGetAppStatusOverviewReportParameterSet parameters) {
        return new DeviceManagementReportsGetAppStatusOverviewReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getAppStatusOverviewReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetDeviceInstallStatusReportRequestBuilder getDeviceInstallStatusReport(@Nonnull final DeviceManagementReportsGetDeviceInstallStatusReportParameterSet parameters) {
        return new DeviceManagementReportsGetDeviceInstallStatusReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getDeviceInstallStatusReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetUserInstallStatusReportRequestBuilder getUserInstallStatusReport(@Nonnull final DeviceManagementReportsGetUserInstallStatusReportParameterSet parameters) {
        return new DeviceManagementReportsGetUserInstallStatusReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getUserInstallStatusReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequestBuilder getConfigurationPoliciesReportForDevice(@Nonnull final DeviceManagementReportsGetConfigurationPoliciesReportForDeviceParameterSet parameters) {
        return new DeviceManagementReportsGetConfigurationPoliciesReportForDeviceRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getConfigurationPoliciesReportForDevice"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetConfigurationPolicyDevicesReportRequestBuilder getConfigurationPolicyDevicesReport(@Nonnull final DeviceManagementReportsGetConfigurationPolicyDevicesReportParameterSet parameters) {
        return new DeviceManagementReportsGetConfigurationPolicyDevicesReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getConfigurationPolicyDevicesReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequestBuilder getConfigurationPolicyDeviceSummaryReport(@Nonnull final DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportParameterSet parameters) {
        return new DeviceManagementReportsGetConfigurationPolicyDeviceSummaryReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getConfigurationPolicyDeviceSummaryReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetConfigurationSettingDetailsReportRequestBuilder getConfigurationSettingDetailsReport(@Nonnull final DeviceManagementReportsGetConfigurationSettingDetailsReportParameterSet parameters) {
        return new DeviceManagementReportsGetConfigurationSettingDetailsReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getConfigurationSettingDetailsReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetConfigurationSettingsReportRequestBuilder getConfigurationSettingsReport(@Nonnull final DeviceManagementReportsGetConfigurationSettingsReportParameterSet parameters) {
        return new DeviceManagementReportsGetConfigurationSettingsReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getConfigurationSettingsReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetActiveMalwareReportRequestBuilder getActiveMalwareReport(@Nonnull final DeviceManagementReportsGetActiveMalwareReportParameterSet parameters) {
        return new DeviceManagementReportsGetActiveMalwareReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getActiveMalwareReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetActiveMalwareSummaryReportRequestBuilder getActiveMalwareSummaryReport(@Nonnull final DeviceManagementReportsGetActiveMalwareSummaryReportParameterSet parameters) {
        return new DeviceManagementReportsGetActiveMalwareSummaryReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getActiveMalwareSummaryReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetMalwareSummaryReportRequestBuilder getMalwareSummaryReport(@Nonnull final DeviceManagementReportsGetMalwareSummaryReportParameterSet parameters) {
        return new DeviceManagementReportsGetMalwareSummaryReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getMalwareSummaryReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder getUnhealthyDefenderAgentsReport(@Nonnull final DeviceManagementReportsGetUnhealthyDefenderAgentsReportParameterSet parameters) {
        return new DeviceManagementReportsGetUnhealthyDefenderAgentsReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getUnhealthyDefenderAgentsReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetUnhealthyFirewallReportRequestBuilder getUnhealthyFirewallReport(@Nonnull final DeviceManagementReportsGetUnhealthyFirewallReportParameterSet parameters) {
        return new DeviceManagementReportsGetUnhealthyFirewallReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getUnhealthyFirewallReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequestBuilder getUnhealthyFirewallSummaryReport(@Nonnull final DeviceManagementReportsGetUnhealthyFirewallSummaryReportParameterSet parameters) {
        return new DeviceManagementReportsGetUnhealthyFirewallSummaryReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getUnhealthyFirewallSummaryReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetCertificatesReportRequestBuilder getCertificatesReport(@Nonnull final DeviceManagementReportsGetCertificatesReportParameterSet parameters) {
        return new DeviceManagementReportsGetCertificatesReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getCertificatesReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetCachedReportRequestBuilder getCachedReport(@Nonnull final DeviceManagementReportsGetCachedReportParameterSet parameters) {
        return new DeviceManagementReportsGetCachedReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getCachedReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder getDeviceNonComplianceReport(@Nonnull final DeviceManagementReportsGetDeviceNonComplianceReportParameterSet parameters) {
        return new DeviceManagementReportsGetDeviceNonComplianceReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getDeviceNonComplianceReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetHistoricalReportRequestBuilder getHistoricalReport(@Nonnull final DeviceManagementReportsGetHistoricalReportParameterSet parameters) {
        return new DeviceManagementReportsGetHistoricalReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getHistoricalReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder getPolicyNonComplianceMetadata(@Nonnull final DeviceManagementReportsGetPolicyNonComplianceMetadataParameterSet parameters) {
        return new DeviceManagementReportsGetPolicyNonComplianceMetadataRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getPolicyNonComplianceMetadata"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder getPolicyNonComplianceReport(@Nonnull final DeviceManagementReportsGetPolicyNonComplianceReportParameterSet parameters) {
        return new DeviceManagementReportsGetPolicyNonComplianceReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getPolicyNonComplianceReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder getPolicyNonComplianceSummaryReport(@Nonnull final DeviceManagementReportsGetPolicyNonComplianceSummaryReportParameterSet parameters) {
        return new DeviceManagementReportsGetPolicyNonComplianceSummaryReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getPolicyNonComplianceSummaryReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetReportFiltersRequestBuilder getReportFilters(@Nonnull final DeviceManagementReportsGetReportFiltersParameterSet parameters) {
        return new DeviceManagementReportsGetReportFiltersRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getReportFilters"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetSettingNonComplianceReportRequestBuilder getSettingNonComplianceReport(@Nonnull final DeviceManagementReportsGetSettingNonComplianceReportParameterSet parameters) {
        return new DeviceManagementReportsGetSettingNonComplianceReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getSettingNonComplianceReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder getWindowsUpdateAlertsPerPolicyPerDeviceReport(@Nonnull final DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportParameterSet parameters) {
        return new DeviceManagementReportsGetWindowsUpdateAlertsPerPolicyPerDeviceReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getWindowsUpdateAlertsPerPolicyPerDeviceReport"), getClient(), null, parameters);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     * @param parameters the parameters for the service method
     */
    @Nonnull
    public DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder getWindowsUpdateAlertSummaryReport(@Nonnull final DeviceManagementReportsGetWindowsUpdateAlertSummaryReportParameterSet parameters) {
        return new DeviceManagementReportsGetWindowsUpdateAlertSummaryReportRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.getWindowsUpdateAlertSummaryReport"), getClient(), null, parameters);
    }
}
