// Template Source: BaseEntityCollectionReferenceRequest.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.ManagedDevice;
import com.microsoft.graph.models.extensions.DetectedApp;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

import com.microsoft.graph.requests.extensions.DetectedAppWithReferenceRequest;
import com.microsoft.graph.requests.extensions.DetectedAppReferenceRequestBuilder;
import com.microsoft.graph.requests.extensions.DetectedAppWithReferenceRequestBuilder;
import com.microsoft.graph.requests.extensions.DetectedAppCollectionWithReferencesRequest;
import com.microsoft.graph.requests.extensions.DetectedAppCollectionWithReferencesRequestBuilder;
import com.microsoft.graph.models.extensions.DetectedApp;
import com.microsoft.graph.options.QueryOption;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseCollectionWithReferencesRequest;
import com.microsoft.graph.http.BaseCollectionWithReferencesRequestBuilder;
import com.microsoft.graph.http.ReferenceRequestBody;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Detected App Collection Reference Request.
 */
public class DetectedAppCollectionReferenceRequest extends BaseCollectionWithReferencesRequest<DetectedApp, DetectedAppWithReferenceRequest, DetectedAppReferenceRequestBuilder, DetectedAppWithReferenceRequestBuilder, DetectedAppCollectionResponse, DetectedAppCollectionWithReferencesPage, DetectedAppCollectionWithReferencesRequest> {

    /**
     * The request builder for this collection of DetectedApp
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public DetectedAppCollectionReferenceRequest(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, DetectedAppCollectionResponse.class, DetectedAppCollectionWithReferencesPage.class, DetectedAppCollectionWithReferencesRequestBuilder.class);
    }

    /**
     * Creates a new DetectedApp
     * @param newDetectedApp the DetectedApp to create
     * @param callback the callback to invoke once the object has been created
     */
    public void post(@Nonnull final DetectedApp newDetectedApp, @Nonnull final ICallback<? super DetectedApp> callback) {
        final String requestUrl = getBaseRequest().getRequestUrl().toString();
        final ReferenceRequestBody body = new ReferenceRequestBody(getBaseRequest().getClient().getServiceRoot() + "/deviceManagement/detectedApps/" + newDetectedApp.id);
        new DetectedAppWithReferenceRequestBuilder(requestUrl, getBaseRequest().getClient(), /* Options */ null)
            .buildRequest(getBaseRequest().getHeaders())
            .post(newDetectedApp, body, callback);
    }

    /**
     * Creates a new DetectedApp
     * @param newDetectedApp the DetectedApp to create
     * @return the newly created object
     */
    @Nonnull
    public DetectedApp post(@Nonnull final DetectedApp newDetectedApp) throws ClientException {
        final String requestUrl = getBaseRequest().getRequestUrl().toString();
        final ReferenceRequestBody body = new ReferenceRequestBody(getBaseRequest().getClient().getServiceRoot() + "/deviceManagement/detectedApps/" + newDetectedApp.id);
        return new DetectedAppWithReferenceRequestBuilder(requestUrl,getBaseRequest().getClient(), /* Options */ null)
                .buildRequest(getBaseRequest().getHeaders())
                .post(newDetectedApp, body);
    }
    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    @Nonnull
    public DetectedAppCollectionReferenceRequest expand(@Nonnull final String value) {
        addExpandOption(value);
        return this;
    }

    /**
     * Sets the filter clause for the request
     *
     * @param value the filter clause
     * @return the updated request
     */
    @Nonnull
    public DetectedAppCollectionReferenceRequest filter(@Nonnull final String value) {
        addFilterOption(value);
        return this;
    }

    /**
     * Sets the order by clause for the request
     *
     * @param value the sort clause
     * @return the updated request
     */
    @Nonnull
    public DetectedAppCollectionReferenceRequest orderBy(@Nonnull final String value) {
        addOrderByOption(value);
        return this;
    }

    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    @Nonnull
    public DetectedAppCollectionReferenceRequest select(@Nonnull final String value) {
        addSelectOption(value);
        return this;
    }

    /**
     * Sets the top value for the request
     *
     * @param value the max number of items to return
     * @return the updated request
     */
    @Nonnull
    public DetectedAppCollectionReferenceRequest top(final int value) {
        addTopOption(value);
        return this;
    }
    /**
     * Sets the count value for the request
     *
     * @param value whether or not to return the count of objects with the request
     * @return the updated request
     */
    @Nonnull
    public DetectedAppCollectionReferenceRequest count(final boolean value) {
        addCountOption(value);
        return this;
    }
    /**
     * Sets the count value to true for the request
     *
     * @return the updated request
     */
    @Nonnull
    public DetectedAppCollectionReferenceRequest count() {
        addCountOption(true);
        return this;
    }
}
