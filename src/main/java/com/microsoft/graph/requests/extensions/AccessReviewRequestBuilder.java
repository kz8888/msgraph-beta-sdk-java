// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.AccessReview;
import com.microsoft.graph.requests.extensions.AccessReviewDecisionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewDecisionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewReviewerCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.AccessReviewReviewerRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Access Review Request Builder.
 */
public class AccessReviewRequestBuilder extends BaseRequestBuilder<AccessReview> {

    /**
     * The request builder for the AccessReview
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public AccessReviewRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the AccessReviewRequest instance
     */
    @Nonnull
    public AccessReviewRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the AccessReviewRequest instance
     */
    @Nonnull
    public AccessReviewRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.extensions.AccessReviewRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the AccessReviewDecision collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public AccessReviewDecisionCollectionRequestBuilder decisions() {
        return new AccessReviewDecisionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("decisions"), getClient(), null);
    }

    /**
     * Gets a request builder for the AccessReviewDecision item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public AccessReviewDecisionRequestBuilder decisions(@Nonnull final String id) {
        return new AccessReviewDecisionRequestBuilder(getRequestUrlWithAdditionalSegment("decisions") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the AccessReview collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public AccessReviewCollectionRequestBuilder instances() {
        return new AccessReviewCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("instances"), getClient(), null);
    }

    /**
     * Gets a request builder for the AccessReview item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public AccessReviewRequestBuilder instances(@Nonnull final String id) {
        return new AccessReviewRequestBuilder(getRequestUrlWithAdditionalSegment("instances") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the AccessReviewDecision collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public AccessReviewDecisionCollectionRequestBuilder myDecisions() {
        return new AccessReviewDecisionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("myDecisions"), getClient(), null);
    }

    /**
     * Gets a request builder for the AccessReviewDecision item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public AccessReviewDecisionRequestBuilder myDecisions(@Nonnull final String id) {
        return new AccessReviewDecisionRequestBuilder(getRequestUrlWithAdditionalSegment("myDecisions") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the AccessReviewReviewer collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public AccessReviewReviewerCollectionRequestBuilder reviewers() {
        return new AccessReviewReviewerCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("reviewers"), getClient(), null);
    }

    /**
     * Gets a request builder for the AccessReviewReviewer item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public AccessReviewReviewerRequestBuilder reviewers(@Nonnull final String id) {
        return new AccessReviewReviewerRequestBuilder(getRequestUrlWithAdditionalSegment("reviewers") + "/" + id, getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     */
    @Nonnull
    public AccessReviewStopRequestBuilder stop() {
        return new AccessReviewStopRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.stop"), getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     */
    @Nonnull
    public AccessReviewApplyDecisionsRequestBuilder applyDecisions() {
        return new AccessReviewApplyDecisionsRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.applyDecisions"), getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     */
    @Nonnull
    public AccessReviewResetDecisionsRequestBuilder resetDecisions() {
        return new AccessReviewResetDecisionsRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.resetDecisions"), getClient(), null);
    }

    /**
     * Gets a builder to execute the method
     * @return the request builder
     */
    @Nonnull
    public AccessReviewSendReminderRequestBuilder sendReminder() {
        return new AccessReviewSendReminderRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.sendReminder"), getClient(), null);
    }
}
