// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.extensions.PhysicalAddress;
import com.microsoft.graph.models.extensions.BookingWorkHours;
import com.microsoft.graph.models.extensions.BookingSchedulingPolicy;
import com.microsoft.graph.models.extensions.BookingAppointment;
import com.microsoft.graph.models.extensions.BookingCustomer;
import com.microsoft.graph.models.extensions.BookingService;
import com.microsoft.graph.models.extensions.BookingStaffMember;
import com.microsoft.graph.models.extensions.BookingNamedEntity;
import com.microsoft.graph.requests.extensions.BookingAppointmentCollectionPage;
import com.microsoft.graph.requests.extensions.BookingCustomerCollectionPage;
import com.microsoft.graph.requests.extensions.BookingServiceCollectionPage;
import com.microsoft.graph.requests.extensions.BookingStaffMemberCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Booking Business.
 */
public class BookingBusiness extends BookingNamedEntity implements IJsonBackedObject {


    /**
     * The Address.
     * 
     */
    @SerializedName(value = "address", alternate = {"Address"})
    @Expose
	@Nullable
    public PhysicalAddress address;

    /**
     * The Business Hours.
     * 
     */
    @SerializedName(value = "businessHours", alternate = {"BusinessHours"})
    @Expose
	@Nullable
    public java.util.List<BookingWorkHours> businessHours;

    /**
     * The Business Type.
     * 
     */
    @SerializedName(value = "businessType", alternate = {"BusinessType"})
    @Expose
	@Nullable
    public String businessType;

    /**
     * The Default Currency Iso.
     * 
     */
    @SerializedName(value = "defaultCurrencyIso", alternate = {"DefaultCurrencyIso"})
    @Expose
	@Nullable
    public String defaultCurrencyIso;

    /**
     * The Email.
     * 
     */
    @SerializedName(value = "email", alternate = {"Email"})
    @Expose
	@Nullable
    public String email;

    /**
     * The Is Published.
     * 
     */
    @SerializedName(value = "isPublished", alternate = {"IsPublished"})
    @Expose
	@Nullable
    public Boolean isPublished;

    /**
     * The Phone.
     * 
     */
    @SerializedName(value = "phone", alternate = {"Phone"})
    @Expose
	@Nullable
    public String phone;

    /**
     * The Public Url.
     * 
     */
    @SerializedName(value = "publicUrl", alternate = {"PublicUrl"})
    @Expose
	@Nullable
    public String publicUrl;

    /**
     * The Scheduling Policy.
     * 
     */
    @SerializedName(value = "schedulingPolicy", alternate = {"SchedulingPolicy"})
    @Expose
	@Nullable
    public BookingSchedulingPolicy schedulingPolicy;

    /**
     * The Web Site Url.
     * Example: https://www.contoso.com
     */
    @SerializedName(value = "webSiteUrl", alternate = {"WebSiteUrl"})
    @Expose
	@Nullable
    public String webSiteUrl;

    /**
     * The Appointments.
     * All appointments in this business.
     */
    @SerializedName(value = "appointments", alternate = {"Appointments"})
    @Expose
	@Nullable
    public BookingAppointmentCollectionPage appointments;

    /**
     * The Calendar View.
     * A calendar view of appointments in this business.
     */
    @SerializedName(value = "calendarView", alternate = {"CalendarView"})
    @Expose
	@Nullable
    public BookingAppointmentCollectionPage calendarView;

    /**
     * The Customers.
     * All customers of this business.
     */
    @SerializedName(value = "customers", alternate = {"Customers"})
    @Expose
	@Nullable
    public BookingCustomerCollectionPage customers;

    /**
     * The Services.
     * All services offered by this business.
     */
    @SerializedName(value = "services", alternate = {"Services"})
    @Expose
	@Nullable
    public BookingServiceCollectionPage services;

    /**
     * The Staff Members.
     * All staff members that provides services in this business.
     */
    @SerializedName(value = "staffMembers", alternate = {"StaffMembers"})
    @Expose
	@Nullable
    public BookingStaffMemberCollectionPage staffMembers;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    @Nullable
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
	@Override
    @Nullable
    public ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("appointments")) {
            appointments = serializer.deserializeObject(json.get("appointments").toString(), BookingAppointmentCollectionPage.class);
        }

        if (json.has("calendarView")) {
            calendarView = serializer.deserializeObject(json.get("calendarView").toString(), BookingAppointmentCollectionPage.class);
        }

        if (json.has("customers")) {
            customers = serializer.deserializeObject(json.get("customers").toString(), BookingCustomerCollectionPage.class);
        }

        if (json.has("services")) {
            services = serializer.deserializeObject(json.get("services").toString(), BookingServiceCollectionPage.class);
        }

        if (json.has("staffMembers")) {
            staffMembers = serializer.deserializeObject(json.get("staffMembers").toString(), BookingStaffMemberCollectionPage.class);
        }
    }
}
