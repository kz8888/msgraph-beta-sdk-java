// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.KeyValuePair;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Microsoft Tunnel Configuration.
 */
public class MicrosoftTunnelConfiguration extends Entity implements IJsonBackedObject {


    /**
     * The Advanced Settings.
     * Additional settings that may be applied to the server
     */
    @SerializedName(value = "advancedSettings", alternate = {"AdvancedSettings"})
    @Expose
    public java.util.List<KeyValuePair> advancedSettings;

    /**
     * The Default Domain Suffix.
     * The Default Domain appendix that will be used by the clients
     */
    @SerializedName(value = "defaultDomainSuffix", alternate = {"DefaultDomainSuffix"})
    @Expose
    public String defaultDomainSuffix;

    /**
     * The Description.
     * The MicrosoftTunnelConfiguration's description
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
    public String description;

    /**
     * The Display Name.
     * The MicrosoftTunnelConfiguration's display name
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
    public String displayName;

    /**
     * The Dns Servers.
     * The DNS servers that will be used by the clients
     */
    @SerializedName(value = "dnsServers", alternate = {"DnsServers"})
    @Expose
    public java.util.List<String> dnsServers;

    /**
     * The Last Update Date Time.
     * When the MicrosoftTunnelConfiguration was last updated
     */
    @SerializedName(value = "lastUpdateDateTime", alternate = {"LastUpdateDateTime"})
    @Expose
    public java.util.Calendar lastUpdateDateTime;

    /**
     * The Listen Port.
     * The port that both TCP and UPD will listen over on the server
     */
    @SerializedName(value = "listenPort", alternate = {"ListenPort"})
    @Expose
    public Integer listenPort;

    /**
     * The Network.
     * The subnet that will be used to allocate virtual address for the clients
     */
    @SerializedName(value = "network", alternate = {"Network"})
    @Expose
    public String network;

    /**
     * The Role Scope Tag Ids.
     * List of Scope Tags for this Entity instance.
     */
    @SerializedName(value = "roleScopeTagIds", alternate = {"RoleScopeTagIds"})
    @Expose
    public java.util.List<String> roleScopeTagIds;

    /**
     * The Routes Exclude.
     * Subsets of the routes that will not be routed by the server
     */
    @SerializedName(value = "routesExclude", alternate = {"RoutesExclude"})
    @Expose
    public java.util.List<String> routesExclude;

    /**
     * The Routes Include.
     * The routs that will be routed by the server
     */
    @SerializedName(value = "routesInclude", alternate = {"RoutesInclude"})
    @Expose
    public java.util.List<String> routesInclude;

    /**
     * The Split DNS.
     * The domains that will be resolved using the provided dns servers
     */
    @SerializedName(value = "splitDNS", alternate = {"SplitDNS"})
    @Expose
    public java.util.List<String> splitDNS;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
