// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.SynchronizationSecretKeyStringValuePair;
import com.microsoft.graph.models.extensions.SynchronizationJob;
import com.microsoft.graph.models.extensions.SynchronizationTemplate;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.SynchronizationJobCollectionPage;
import com.microsoft.graph.requests.extensions.SynchronizationTemplateCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Synchronization.
 */
public class Synchronization extends Entity implements IJsonBackedObject {


    /**
     * The Secrets.
     * 
     */
    @SerializedName(value = "secrets", alternate = {"Secrets"})
    @Expose
    public java.util.List<SynchronizationSecretKeyStringValuePair> secrets;

    /**
     * The Jobs.
     * 
     */
    @SerializedName(value = "jobs", alternate = {"Jobs"})
    @Expose
    public SynchronizationJobCollectionPage jobs;

    /**
     * The Templates.
     * 
     */
    @SerializedName(value = "templates", alternate = {"Templates"})
    @Expose
    public SynchronizationTemplateCollectionPage templates;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("jobs")) {
            jobs = serializer.deserializeObject(json.get("jobs").toString(), SynchronizationJobCollectionPage.class);
        }

        if (json.has("templates")) {
            templates = serializer.deserializeObject(json.get("templates").toString(), SynchronizationTemplateCollectionPage.class);
        }
    }
}
