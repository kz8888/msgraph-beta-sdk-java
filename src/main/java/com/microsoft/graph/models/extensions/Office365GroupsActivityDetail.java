// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Office365Groups Activity Detail.
 */
public class Office365GroupsActivityDetail extends Entity implements IJsonBackedObject {


    /**
     * The Exchange Mailbox Storage Used In Bytes.
     * 
     */
    @SerializedName(value = "exchangeMailboxStorageUsedInBytes", alternate = {"ExchangeMailboxStorageUsedInBytes"})
    @Expose
	@Nullable
    public Long exchangeMailboxStorageUsedInBytes;

    /**
     * The Exchange Mailbox Total Item Count.
     * 
     */
    @SerializedName(value = "exchangeMailboxTotalItemCount", alternate = {"ExchangeMailboxTotalItemCount"})
    @Expose
	@Nullable
    public Long exchangeMailboxTotalItemCount;

    /**
     * The Exchange Received Email Count.
     * 
     */
    @SerializedName(value = "exchangeReceivedEmailCount", alternate = {"ExchangeReceivedEmailCount"})
    @Expose
	@Nullable
    public Long exchangeReceivedEmailCount;

    /**
     * The External Member Count.
     * 
     */
    @SerializedName(value = "externalMemberCount", alternate = {"ExternalMemberCount"})
    @Expose
	@Nullable
    public Long externalMemberCount;

    /**
     * The Group Display Name.
     * 
     */
    @SerializedName(value = "groupDisplayName", alternate = {"GroupDisplayName"})
    @Expose
	@Nullable
    public String groupDisplayName;

    /**
     * The Group Id.
     * 
     */
    @SerializedName(value = "groupId", alternate = {"GroupId"})
    @Expose
	@Nullable
    public String groupId;

    /**
     * The Group Type.
     * 
     */
    @SerializedName(value = "groupType", alternate = {"GroupType"})
    @Expose
	@Nullable
    public String groupType;

    /**
     * The Is Deleted.
     * 
     */
    @SerializedName(value = "isDeleted", alternate = {"IsDeleted"})
    @Expose
	@Nullable
    public Boolean isDeleted;

    /**
     * The Last Activity Date.
     * 
     */
    @SerializedName(value = "lastActivityDate", alternate = {"LastActivityDate"})
    @Expose
	@Nullable
    public com.microsoft.graph.core.DateOnly lastActivityDate;

    /**
     * The Member Count.
     * 
     */
    @SerializedName(value = "memberCount", alternate = {"MemberCount"})
    @Expose
	@Nullable
    public Long memberCount;

    /**
     * The Owner Principal Name.
     * 
     */
    @SerializedName(value = "ownerPrincipalName", alternate = {"OwnerPrincipalName"})
    @Expose
	@Nullable
    public String ownerPrincipalName;

    /**
     * The Report Period.
     * 
     */
    @SerializedName(value = "reportPeriod", alternate = {"ReportPeriod"})
    @Expose
	@Nullable
    public String reportPeriod;

    /**
     * The Report Refresh Date.
     * 
     */
    @SerializedName(value = "reportRefreshDate", alternate = {"ReportRefreshDate"})
    @Expose
	@Nullable
    public com.microsoft.graph.core.DateOnly reportRefreshDate;

    /**
     * The Share Point Active File Count.
     * 
     */
    @SerializedName(value = "sharePointActiveFileCount", alternate = {"SharePointActiveFileCount"})
    @Expose
	@Nullable
    public Long sharePointActiveFileCount;

    /**
     * The Share Point Site Storage Used In Bytes.
     * 
     */
    @SerializedName(value = "sharePointSiteStorageUsedInBytes", alternate = {"SharePointSiteStorageUsedInBytes"})
    @Expose
	@Nullable
    public Long sharePointSiteStorageUsedInBytes;

    /**
     * The Share Point Total File Count.
     * 
     */
    @SerializedName(value = "sharePointTotalFileCount", alternate = {"SharePointTotalFileCount"})
    @Expose
	@Nullable
    public Long sharePointTotalFileCount;

    /**
     * The Yammer Liked Message Count.
     * 
     */
    @SerializedName(value = "yammerLikedMessageCount", alternate = {"YammerLikedMessageCount"})
    @Expose
	@Nullable
    public Long yammerLikedMessageCount;

    /**
     * The Yammer Posted Message Count.
     * 
     */
    @SerializedName(value = "yammerPostedMessageCount", alternate = {"YammerPostedMessageCount"})
    @Expose
	@Nullable
    public Long yammerPostedMessageCount;

    /**
     * The Yammer Read Message Count.
     * 
     */
    @SerializedName(value = "yammerReadMessageCount", alternate = {"YammerReadMessageCount"})
    @Expose
	@Nullable
    public Long yammerReadMessageCount;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    @Nullable
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
	@Override
    @Nullable
    public ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
