// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.PostalAddressType;
import com.microsoft.graph.models.extensions.Currency;
import com.microsoft.graph.models.extensions.PaymentMethod;
import com.microsoft.graph.models.extensions.PaymentTerm;
import com.microsoft.graph.models.extensions.Picture;
import com.microsoft.graph.models.extensions.ShipmentMethod;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.PictureCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Customer.
 */
public class Customer extends Entity implements IJsonBackedObject {


    /**
     * The Address.
     * 
     */
    @SerializedName(value = "address", alternate = {"Address"})
    @Expose
    public PostalAddressType address;

    /**
     * The Blocked.
     * 
     */
    @SerializedName(value = "blocked", alternate = {"Blocked"})
    @Expose
    public String blocked;

    /**
     * The Currency Code.
     * 
     */
    @SerializedName(value = "currencyCode", alternate = {"CurrencyCode"})
    @Expose
    public String currencyCode;

    /**
     * The Currency Id.
     * 
     */
    @SerializedName(value = "currencyId", alternate = {"CurrencyId"})
    @Expose
    public java.util.UUID currencyId;

    /**
     * The Display Name.
     * 
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
    public String displayName;

    /**
     * The Email.
     * 
     */
    @SerializedName(value = "email", alternate = {"Email"})
    @Expose
    public String email;

    /**
     * The Last Modified Date Time.
     * 
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
    public java.util.Calendar lastModifiedDateTime;

    /**
     * The Number.
     * 
     */
    @SerializedName(value = "number", alternate = {"Number"})
    @Expose
    public String number;

    /**
     * The Payment Method Id.
     * 
     */
    @SerializedName(value = "paymentMethodId", alternate = {"PaymentMethodId"})
    @Expose
    public java.util.UUID paymentMethodId;

    /**
     * The Payment Terms Id.
     * 
     */
    @SerializedName(value = "paymentTermsId", alternate = {"PaymentTermsId"})
    @Expose
    public java.util.UUID paymentTermsId;

    /**
     * The Phone Number.
     * 
     */
    @SerializedName(value = "phoneNumber", alternate = {"PhoneNumber"})
    @Expose
    public String phoneNumber;

    /**
     * The Shipment Method Id.
     * 
     */
    @SerializedName(value = "shipmentMethodId", alternate = {"ShipmentMethodId"})
    @Expose
    public java.util.UUID shipmentMethodId;

    /**
     * The Tax Area Display Name.
     * 
     */
    @SerializedName(value = "taxAreaDisplayName", alternate = {"TaxAreaDisplayName"})
    @Expose
    public String taxAreaDisplayName;

    /**
     * The Tax Area Id.
     * 
     */
    @SerializedName(value = "taxAreaId", alternate = {"TaxAreaId"})
    @Expose
    public java.util.UUID taxAreaId;

    /**
     * The Tax Liable.
     * 
     */
    @SerializedName(value = "taxLiable", alternate = {"TaxLiable"})
    @Expose
    public Boolean taxLiable;

    /**
     * The Tax Registration Number.
     * 
     */
    @SerializedName(value = "taxRegistrationNumber", alternate = {"TaxRegistrationNumber"})
    @Expose
    public String taxRegistrationNumber;

    /**
     * The Type.
     * 
     */
    @SerializedName(value = "type", alternate = {"Type"})
    @Expose
    public String type;

    /**
     * The Website.
     * 
     */
    @SerializedName(value = "website", alternate = {"Website"})
    @Expose
    public String website;

    /**
     * The Currency.
     * 
     */
    @SerializedName(value = "currency", alternate = {"Currency"})
    @Expose
    public Currency currency;

    /**
     * The Payment Method.
     * 
     */
    @SerializedName(value = "paymentMethod", alternate = {"PaymentMethod"})
    @Expose
    public PaymentMethod paymentMethod;

    /**
     * The Payment Term.
     * 
     */
    @SerializedName(value = "paymentTerm", alternate = {"PaymentTerm"})
    @Expose
    public PaymentTerm paymentTerm;

    /**
     * The Picture.
     * 
     */
    @SerializedName(value = "picture", alternate = {"Picture"})
    @Expose
    public PictureCollectionPage picture;

    /**
     * The Shipment Method.
     * 
     */
    @SerializedName(value = "shipmentMethod", alternate = {"ShipmentMethod"})
    @Expose
    public ShipmentMethod shipmentMethod;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("picture")) {
            picture = serializer.deserializeObject(json.get("picture").toString(), PictureCollectionPage.class);
        }
    }
}
